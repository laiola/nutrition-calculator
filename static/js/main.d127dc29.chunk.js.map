{"version":3,"sources":["components/header/Header.js","constant/Sex.js","constant/Activity.js","components/characteristics/Characteristics.js","components/goal-selector/GoalSelector.js","constant/NutritionRatio.js","components/nutrition-selector/NutritionRatioSelector.js","components/nutrition-display/NutritionDisplay.js","components/tab/Calculator.js","constant/ActionName.js","components/container/CalculatorContainer.js","actions/ActionCreator.js","helper/nutritionCalculator.js","components/modal/ProductModal.js","components/table/ProductTable.js","components/tab/Products.js","components/table/ProductSelect.js","components/table/MenuTable.js","components/container/MenuContainer.js","components/tab/Menu.js","components/container/ProductsContainer.js","components/tab/About.js","components/tab/NotFoundPage.js","helper/localStorageHelper.js","reducers/characteristics.js","reducers/nutrition.js","reducers/menu.js","reducers/products.js","App.js","serviceWorker.js","index.js","components/header/logo.jpg"],"names":["icon","react_default","a","createElement","src","logo","className","alt","Header","Navbar","bg","Brand","react_router_dom","to","Nav","Item","SexCoefficient","Object","freeze","MALE","FEMALE","ActivityCoefficient","NO_ACTIVITY","LOW_ACTIVITY","NORMAL_ACTIVITY","HIGH_ACTIVITY","EXTREME_ACTIVITY","Characteristics","_ref","handleChange","handleSubmit","characteristics","Form","onSubmit","Group","Label","Control","as","value","sex","onChange","name","Row","Col","type","step","weight","height","age","activity","Button","variant","goals","key","GoalSelector","goalRatio","map","i","ProteinRatio","RECOMMENDED_PROTEIN_RATIO","NORMAL_PROTEIN_RATIO","HIGH_PROTEIN_RATIO","VERY_HIGH_PROTEIN_RATIO","EXTREME_PROTEIN_RATIO","FatRatio","LOW_FAT_RATIO","RECOMMENDED_FAT_RATIO","HIGH_FAT_RATIO","NutritionRatioSelector","proteinRatio","fatRatio","values","NutritionDisplay","intake","protein","fat","carbohydrate","CardDeck","NutritionDisplay_NutritionCard","title","NutritionCard","_ref2","Card","text","Body","Title","Calculator","event","_this","props","handleCharacteristicsChange","target","handleSubmitCharacteristics","preventDefault","handleSubmitGoal","_this$props$character","totalIntake","handleGoalRatioSubmit","handleSubmitNutritionRatio","_this$props$character2","handleNutritionSubmit","_this$props$character3","this","_this$props$nutrition","nutrition","goalIntake","Header_Header","Characteristics_Characteristics","GoalSelector_GoalSelector","NutritionRatioSelector_NutritionRatioSelector","NutritionDisplay_NutritionDisplay","Component","ActionNames","SUBMIT_CHARACTERISTICS","SUBMIT_GOAL_RATIO","SUBMIT_NUTRITION_RATIO","CHARACTERISTICS_INPUT_CHANGE","ADD_ROW_TO_MENU","MENU_ROW_INPUT_CHANGE","CALCULATE_MENU_NUTRITION","DELETE_MENU_ROW","SUBMIT_PRODUCT","DELETE_PRODUCT","CalculatorContainer","connect","state","dispatch","inputName","inputValue","characteristicsInputChange","submitGoalRatio","submitNutritionRatio","calculateTotalIntake","_ref$activity","arguments","length","undefined","calculateBMR","calculateNutritionByWeight","product","newProduct","objectSpread","weightCoef","Math","round","proteinPer","fatPer","carbohydratePer","calorie","caloriePer","initialProduct","ProductModal","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","defineProperty","_this$props","onClose","_this$props2","isDisplayedProductModal","Modal","show","onHide","closeButton","ProductModal_ProductForm","Footer","onClick","defaultProps","f","ProductForm","ProductTable","onAdd","isDisplayModal","onEdit","editIndex","onDelete","row","_this2","headers","rows","_this$state","modal_ProductModal","header","concat","keys","j","defaultIndex","PRODUCTS_KEY","ProductSelect","onAddProduct","onAddProductToTable","selectedIndex","products","onSelect","newProducts","toConsumableArray","localStorage","setItem","JSON","stringify","slice","id","storedProducts","parse","getItem","_this$state2","htmlFor","initialRow","MenuTable","onAddRow","onAddPresetRow","updateNutrition","onChangeRow","onDeleteRow","getEditableCell","rowIndex","goalProtein","goalFat","goalCarbohydrate","Fragment","components_table_ProductSelect","MenuContainer","goalNutrition","menu","addRowToMenu","deleteMenuRow","changeRow","table_MenuTable","ProductsContainer","productIndex","submitProduct","deleteProduct","table_ProductTable","BMR_HEADERS","BMR_ROWS","TOTAL_INTAKE_HEADERS","TOTAL_INTAKE_ROWS","NUTRITION_HEADERS","NUTRITION_ROWS","About","href","About_ConstTable","ConstTable","cell","redirect","history","push","NotFoundPage","storeObject","storedObject","getOrDefault","defaultValue","parsedValue","isNotEmptyObject","obj","initialCharacteristicsState","initialNutritionState","initialTotal","initialMenuState","nutritionReducer","accumulator","getUpdatedNutrition","reduce","toFixed","initialProductsState","store","createStore","combineReducers","action","updatedState","calculateMacronutrient","updatedRows","splice","App","es","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.d127dc29.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\n\r\nimport logo from './logo.jpg';\r\nimport './Header.css';\r\n\r\nconst icon = (\r\n    <img src={logo} className=\"logo\" alt=\"Nutrition calculator\"/>\r\n);\r\n\r\nexport const Header = () => (\r\n    <Navbar bg=\"light\" className=\"nav-tabs justify-content-between\">\r\n        <Navbar.Brand>\r\n            <Link to=\"calculator\" className=\"no-link-underline\">{icon} Nutrition calculator</Link>\r\n        </Navbar.Brand>\r\n        <Nav>\r\n            <Nav.Item>\r\n                <Link to=\"menu\" className=\"color-link\">Menu</Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                <Link to=\"products\" className=\"color-link\">Products</Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                <Link to=\"about\" className=\"color-link\">About</Link>\r\n            </Nav.Item>\r\n        </Nav>\r\n\r\n    </Navbar>\r\n);\r\n","const MALE_CONSTANT = 5;\r\nconst FEMALE_CONSTANT = -161;\r\n\r\nexport const MALE = 'MALE';\r\nexport const FEMALE = 'FEMALE';\r\n\r\nexport const SexCoefficient = Object.freeze({\r\n    MALE: MALE_CONSTANT,\r\n    FEMALE: FEMALE_CONSTANT\r\n});\r\n","const NO_ACTIVITY_COEF = 1.2;\r\nconst LOW_ACTIVITY_COEF = 1.375;\r\nconst NORMAL_ACTIVITY_COEF = 1.53;\r\nconst HIGH_ACTIVITY_COEF = 1.76;\r\nconst EXTREME_ACTIVITY_COEF = 2.25;\r\n\r\nexport const NO_ACTIVITY = 'NO_ACTIVITY';\r\nexport const LOW_ACTIVITY = 'LOW_ACTIVITY';\r\nexport const NORMAL_ACTIVITY = 'NORMAL_ACTIVITY';\r\nexport const HIGH_ACTIVITY = 'HIGH_ACTIVITY';\r\nexport const EXTREME_ACTIVITY = 'EXTREME_ACTIVITY';\r\n\r\nexport const ActivityCoefficient = Object.freeze({\r\n    NO_ACTIVITY: NO_ACTIVITY_COEF,\r\n    LOW_ACTIVITY: LOW_ACTIVITY_COEF,\r\n    NORMAL_ACTIVITY: NORMAL_ACTIVITY_COEF,\r\n    HIGH_ACTIVITY: HIGH_ACTIVITY_COEF,\r\n    EXTREME_ACTIVITY: EXTREME_ACTIVITY_COEF\r\n});\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, Col, Form } from 'react-bootstrap';\r\n\r\nimport { FEMALE, MALE } from '../../constant/Sex';\r\nimport { EXTREME_ACTIVITY, HIGH_ACTIVITY, LOW_ACTIVITY, NO_ACTIVITY, NORMAL_ACTIVITY } from '../../constant/Activity';\r\n\r\nimport './Characteristics.css';\r\n\r\nexport const Characteristics = ({ handleChange, handleSubmit, characteristics }) => (\r\n    <div className=\"characteristics\">\r\n        <Form onSubmit={handleSubmit}>\r\n            <legend>Step 1. Input your characteristics</legend>\r\n            <Form.Group>\r\n                <Form.Label>Pick your sex:</Form.Label>\r\n                <Form.Control as=\"select\" value={characteristics.sex} onChange={handleChange} name=\"sex\">\r\n                    <option value={MALE}>Male</option>\r\n                    <option value={FEMALE}>Female</option>\r\n                </Form.Control>\r\n            </Form.Group>\r\n            <Form.Row>\r\n                <Col>\r\n                    <Form.Label>Weight in kg:</Form.Label>\r\n                    <Form.Control type=\"number\" step=\"1\" name=\"weight\" value={characteristics.weight}\r\n                                  onChange={handleChange}/>\r\n                </Col>\r\n                <Col>\r\n                    <Form.Label>Height in kg:</Form.Label>\r\n                    <Form.Control type=\"number\" step=\"1\" name=\"height\" value={characteristics.height}\r\n                                  onChange={handleChange}/>\r\n                </Col>\r\n                <Col>\r\n                    <Form.Label>Age in years:</Form.Label>\r\n                    <Form.Control type=\"number\" step=\"1\" name=\"age\" value={characteristics.age}\r\n                                  onChange={handleChange}/>\r\n                </Col>\r\n            </Form.Row>\r\n            <Form.Group>\r\n                <Form.Label>Pick your lifestyle:</Form.Label>\r\n                <Form.Control as=\"select\" value={characteristics.activity} onChange={handleChange} name=\"activity\">\r\n                    <option value={NO_ACTIVITY}>No activity</option>\r\n                    <option value={LOW_ACTIVITY}>Low activity</option>\r\n                    <option value={NORMAL_ACTIVITY}>Normal activity</option>\r\n                    <option value={HIGH_ACTIVITY}>High activity</option>\r\n                    <option value={EXTREME_ACTIVITY}>Extreme activity</option>\r\n                </Form.Control>\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n    </div>\r\n);\r\n\r\nCharacteristics.propTypes = {\r\n    handleChange: PropTypes.func.isRequired,\r\n    handleSubmit: PropTypes.func.isRequired,\r\n    characteristics: PropTypes.shape({\r\n        sex: PropTypes.oneOf([\r\n            MALE,\r\n            FEMALE\r\n        ]),\r\n        weight: PropTypes.oneOfType([\r\n            PropTypes.number,\r\n            PropTypes.string\r\n        ]),\r\n        height: PropTypes.oneOfType([\r\n            PropTypes.number,\r\n            PropTypes.string\r\n        ]),\r\n        age: PropTypes.oneOfType([\r\n            PropTypes.number,\r\n            PropTypes.string\r\n        ]),\r\n        activity: PropTypes.oneOf([\r\n            NO_ACTIVITY,\r\n            LOW_ACTIVITY,\r\n            NORMAL_ACTIVITY,\r\n            HIGH_ACTIVITY,\r\n            EXTREME_ACTIVITY\r\n        ]),\r\n    }),\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, Form } from 'react-bootstrap';\r\n\r\nimport './GoalSelector.css';\r\n\r\nexport const DEFAULT_GOAL_RATIO = 1;\r\nconst goals = [\r\n    { key: 0.75, value: 'Lose weight (25%)' },\r\n    { key: 0.80, value: 'Lose weight (20%)' },\r\n    { key: 0.85, value: 'Lose weight (15%)' },\r\n    { key: DEFAULT_GOAL_RATIO, value: 'Keep weight' },\r\n    { key: 1.15, value: 'Gain weight (15%)' },\r\n    { key: 1.20, value: 'Gain weight (20%)' },\r\n    { key: 1.25, value: 'Gain weight (25%)' },\r\n];\r\n\r\nexport const GoalSelector = ({ goalRatio, handleChange, handleSubmit }) => (\r\n    <div className=\"goal-selector\">\r\n        <Form onSubmit={handleSubmit}>\r\n            <legend>Step 2. Goal</legend>\r\n            <Form.Group>\r\n                <Form.Label>Select your goal:</Form.Label>\r\n                <Form.Control as=\"select\" value={goalRatio} onChange={handleChange} name=\"goalRatio\">\r\n                    {\r\n                        goals.map((value, i) =>\r\n                            <option key={i} value={value.key}>{value.value}</option>\r\n                        )\r\n                    }\r\n                </Form.Control>\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n    </div>\r\n);\r\n\r\nGoalSelector.propTypes = {\r\n    handleChange: PropTypes.func.isRequired,\r\n    handleSubmit: PropTypes.func.isRequired,\r\n    goalRatio: PropTypes.oneOfType([\r\n        PropTypes.number,\r\n        PropTypes.string\r\n    ]),\r\n};\r\n","export const RECOMMENDED_PROTEIN_RATIO = 1;\r\nconst NORMAL_PROTEIN_RATIO = 1.25;\r\nconst HIGH_PROTEIN_RATIO = 1.5;\r\nconst VERY_HIGH_PROTEIN_RATIO = 1.75;\r\nconst EXTREME_PROTEIN_RATIO = 2;\r\n\r\nexport const ProteinRatio = Object.freeze({\r\n    RECOMMENDED_PROTEIN_RATIO,\r\n    NORMAL_PROTEIN_RATIO,\r\n    HIGH_PROTEIN_RATIO,\r\n    VERY_HIGH_PROTEIN_RATIO,\r\n    EXTREME_PROTEIN_RATIO,\r\n});\r\n\r\nexport const RECOMMENDED_FAT_RATIO = 1;\r\nconst LOW_FAT_RATIO = 0.8;\r\nconst HIGH_FAT_RATIO = 1.2;\r\n\r\nexport const FatRatio = Object.freeze({\r\n    LOW_FAT_RATIO,\r\n    RECOMMENDED_FAT_RATIO,\r\n    HIGH_FAT_RATIO,\r\n});\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, Form } from 'react-bootstrap';\r\n\r\nimport { FatRatio, ProteinRatio } from '../../constant/NutritionRatio';\r\n\r\nimport './NutritionRatioSelector.css';\r\n\r\nexport const NutritionRatioSelector = ({ handleSubmit, handleChange, proteinRatio, fatRatio }) => (\r\n    <div className=\"nutrition-ratio-selector\">\r\n        <Form onSubmit={handleSubmit}>\r\n            <legend>Step 3. Choose your nutrition ratio</legend>\r\n            <Form.Group>\r\n                <Form.Label>Pick protein weight per kilogram of your weight:</Form.Label>\r\n                <Form.Control as=\"select\" value={proteinRatio} onChange={handleChange}\r\n                              name=\"proteinRatio\">\r\n                    {\r\n                        Object.values(ProteinRatio).map((value, i) =>\r\n                            <option key={i} value={value}>{value}</option>\r\n                        )\r\n                    }\r\n                </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group>\r\n                <Form.Label>Pick fat weight per kilogram of your weight:</Form.Label>\r\n                <Form.Control as=\"select\" value={fatRatio} onChange={handleChange} name=\"fatRatio\">\r\n                    {\r\n                        Object.values(FatRatio).map((value, i) =>\r\n                            <option key={i} value={value}>{value}</option>\r\n                        )\r\n                    }\r\n                </Form.Control>\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n    </div>\r\n);\r\n\r\nNutritionRatioSelector.propTypes = {\r\n    handleSubmit: PropTypes.func.isRequired,\r\n    handleChange: PropTypes.func.isRequired,\r\n    proteinRatio: PropTypes.oneOfType([\r\n        PropTypes.number,\r\n        PropTypes.string\r\n    ]),\r\n    fatRatio: PropTypes.oneOfType([\r\n        PropTypes.number,\r\n        PropTypes.string\r\n    ]),\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Card, CardDeck } from 'react-bootstrap';\r\n\r\nimport './NutritionDisplay.css';\r\n\r\nexport const NutritionDisplay = ({ intake, protein, fat, carbohydrate }) => (\r\n    <div className=\"nutrition-display\">\r\n        <CardDeck>\r\n            <NutritionCard title=\"Goal Protein\" value={protein}/>\r\n            <NutritionCard title=\"Goal Fat\" value={fat}/>\r\n            <NutritionCard title=\"Goal Carbohydrate\" value={carbohydrate}/>\r\n            <NutritionCard title=\"Goal Intake\" value={intake}/>\r\n        </CardDeck>\r\n    </div>\r\n);\r\n\r\nexport const NutritionCard = ({ title, value }) => (\r\n    <Card bg=\"primary\" text=\"white\" className=\"text-center mb-3\">\r\n        <Card.Header>{title}</Card.Header>\r\n        <Card.Body>\r\n            <Card.Title as=\"h4\">{value}</Card.Title>\r\n        </Card.Body>\r\n    </Card>\r\n);\r\n\r\nNutritionDisplay.propTypes = {\r\n    intake: PropTypes.number.isRequired,\r\n    protein: PropTypes.number.isRequired,\r\n    fat: PropTypes.number.isRequired,\r\n    carbohydrate: PropTypes.number.isRequired,\r\n};\r\n\r\nNutritionCard.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Header } from '../header/Header';\r\nimport { Characteristics } from '../characteristics/Characteristics';\r\nimport { GoalSelector } from '../goal-selector/GoalSelector';\r\nimport { NutritionRatioSelector } from '../nutrition-selector/NutritionRatioSelector';\r\nimport { NutritionDisplay } from '../nutrition-display/NutritionDisplay';\r\n\r\nclass Calculator extends Component {\r\n    static propTypes = {\r\n        handleCharacteristicsChange: PropTypes.func.isRequired,\r\n        handleSubmitCharacteristics: PropTypes.func.isRequired,\r\n        handleGoalRatioSubmit: PropTypes.func.isRequired,\r\n        handleNutritionSubmit: PropTypes.func.isRequired,\r\n        nutrition: PropTypes.shape({\r\n            protein: PropTypes.number.isRequired,\r\n            fat: PropTypes.number.isRequired,\r\n            carbohydrate: PropTypes.number.isRequired,\r\n            goalIntake: PropTypes.number.isRequired\r\n        }),\r\n        characteristics: PropTypes.object.isRequired,\r\n    };\r\n\r\n    handleChange = event => {\r\n        this.props.handleCharacteristicsChange(event.target.name, event.target.value);\r\n    };\r\n\r\n    handleSubmitCharacteristics = event => {\r\n        event.preventDefault();\r\n        this.props.handleSubmitCharacteristics();\r\n    };\r\n\r\n    handleSubmitGoal = event => {\r\n        event.preventDefault();\r\n        const { goalRatio, totalIntake } = this.props.characteristics;\r\n        this.props.handleGoalRatioSubmit(goalRatio, totalIntake);\r\n    };\r\n\r\n    handleSubmitNutritionRatio = event => {\r\n        event.preventDefault();\r\n        const { weight, proteinRatio, fatRatio } = this.props.characteristics;\r\n        this.props.handleNutritionSubmit(proteinRatio, fatRatio, weight);\r\n    };\r\n\r\n    render() {\r\n        const { goalRatio, proteinRatio, fatRatio, totalIntake } = this.props.characteristics;\r\n        const { protein, fat, carbohydrate, goalIntake } = this.props.nutrition;\r\n\r\n        return (\r\n            <div>\r\n                <Header/>\r\n                <Characteristics\r\n                    characteristics={this.props.characteristics}\r\n                    handleChange={this.handleChange}\r\n                    handleSubmit={this.handleSubmitCharacteristics}\r\n                />\r\n                {\r\n                    !!totalIntake && <GoalSelector\r\n                        goalRatio={goalRatio}\r\n                        handleChange={this.handleChange}\r\n                        handleSubmit={this.handleSubmitGoal}\r\n                    />\r\n                }\r\n                {\r\n                    !!goalIntake && <NutritionRatioSelector\r\n                        proteinRatio={proteinRatio}\r\n                        fatRatio={fatRatio}\r\n                        handleChange={this.handleChange}\r\n                        handleSubmit={this.handleSubmitNutritionRatio}\r\n                    />\r\n                }\r\n                {\r\n                    !!goalIntake && !!protein && !!fat && !!carbohydrate && <NutritionDisplay\r\n                        intake={goalIntake}\r\n                        protein={protein}\r\n                        fat={fat}\r\n                        carbohydrate={carbohydrate}\r\n                    />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Calculator;\r\n","export const SUBMIT_CHARACTERISTICS = 'SUBMIT_CHARACTERISTICS';\r\nexport const SUBMIT_GOAL_RATIO = 'SUBMIT_GOAL_RATIO';\r\nexport const SUBMIT_NUTRITION_RATIO = 'SUBMIT_NUTRITION_RATIO';\r\nexport const CHARACTERISTICS_INPUT_CHANGE = 'CHARACTERISTICS_INPUT_CHANGE';\r\n\r\nexport const ADD_ROW_TO_MENU = 'ADD_ROW_TO_MENU';\r\nexport const MENU_ROW_INPUT_CHANGE = 'MENU_ROW_INPUT_CHANGE';\r\nexport const CALCULATE_MENU_NUTRITION = 'CALCULATE_MENU_NUTRITION';\r\nexport const DELETE_MENU_ROW = 'DELETE_MENU_ROW';\r\n\r\nexport const SUBMIT_PRODUCT = 'SUBMIT_PRODUCT';\r\nexport const DELETE_PRODUCT = 'DELETE_PRODUCT';\r\n\r\nexport const ActionNames = Object.freeze({\r\n    SUBMIT_CHARACTERISTICS,\r\n    SUBMIT_GOAL_RATIO,\r\n    SUBMIT_NUTRITION_RATIO,\r\n    CHARACTERISTICS_INPUT_CHANGE,\r\n\r\n    ADD_ROW_TO_MENU,\r\n    MENU_ROW_INPUT_CHANGE,\r\n    CALCULATE_MENU_NUTRITION,\r\n    DELETE_MENU_ROW,\r\n\r\n    SUBMIT_PRODUCT,\r\n    DELETE_PRODUCT,\r\n});\r\n","import { connect } from 'react-redux'\r\n\r\nimport Calculator from '../tab/Calculator';\r\nimport {\r\n    characteristicsInputChange,\r\n    submitCharacteristics,\r\n    submitGoalRatio,\r\n    submitNutritionRatio\r\n} from '../../actions/ActionCreator';\r\n\r\nconst mapStateToProps = state => ({\r\n    characteristics: state.characteristics,\r\n    nutrition: state.nutrition\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    handleCharacteristicsChange:\r\n        (inputName, inputValue) => dispatch(characteristicsInputChange(inputName, inputValue)),\r\n\r\n    handleSubmitCharacteristics: () => dispatch(submitCharacteristics()),\r\n\r\n    handleGoalRatioSubmit:\r\n        (goalRatio, totalIntake) => dispatch(submitGoalRatio(goalRatio, totalIntake)),\r\n\r\n    handleNutritionSubmit:\r\n        (proteinRatio, fatRatio, weight) =>\r\n            dispatch(submitNutritionRatio(proteinRatio, fatRatio, weight)),\r\n});\r\n\r\nexport const CalculatorContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Calculator);\r\n","import { ActionNames } from '../constant/ActionName';\r\n\r\nexport const submitCharacteristics = () => (\r\n    {\r\n        type: ActionNames.SUBMIT_CHARACTERISTICS,\r\n    }\r\n);\r\n\r\nexport const characteristicsInputChange = (inputName, inputValue) => (\r\n    {\r\n        type: ActionNames.CHARACTERISTICS_INPUT_CHANGE,\r\n        inputName,\r\n        inputValue\r\n    }\r\n);\r\n\r\nexport const submitGoalRatio = (goalRatio, totalIntake) => (\r\n    {\r\n        type: ActionNames.SUBMIT_GOAL_RATIO,\r\n        goalRatio,\r\n        totalIntake\r\n    }\r\n);\r\n\r\nexport const submitNutritionRatio = (proteinRatio, fatRatio, weight) => (\r\n    {\r\n        type: ActionNames.SUBMIT_NUTRITION_RATIO,\r\n        proteinRatio,\r\n        fatRatio,\r\n        weight\r\n    }\r\n);\r\n\r\nexport const addRowToMenu = row => (\r\n    {\r\n        type: ActionNames.ADD_ROW_TO_MENU,\r\n        row\r\n    }\r\n);\r\n\r\nexport const deleteMenuRow = rowIndex => (\r\n    {\r\n        type: ActionNames.DELETE_MENU_ROW,\r\n        rowIndex\r\n    }\r\n);\r\n\r\nexport const changeRow = (rowIndex, inputName, inputValue) => (\r\n    {\r\n        type: ActionNames.MENU_ROW_INPUT_CHANGE,\r\n        rowIndex,\r\n        inputName,\r\n        inputValue\r\n    }\r\n);\r\n\r\nexport const calculateNutrition = () => (\r\n    {\r\n        type: ActionNames.CALCULATE_MENU_NUTRITION\r\n    }\r\n);\r\n\r\nexport const submitProduct = (productIndex, product) => (\r\n    {\r\n        type: ActionNames.SUBMIT_PRODUCT,\r\n        productIndex,\r\n        product\r\n    }\r\n);\r\n\r\nexport const deleteProduct = productIndex => (\r\n    {\r\n        type: ActionNames.DELETE_PRODUCT,\r\n        productIndex\r\n    }\r\n);\r\n","import { FEMALE, SexCoefficient } from '../constant/Sex';\r\nimport { ActivityCoefficient, NORMAL_ACTIVITY } from '../constant/Activity';\r\n\r\nconst WEIGHT_COEF = 10;\r\nconst HEIGHT_COEF = 6.25;\r\nconst AGE_COEF = 5;\r\nconst DEFAULT_BMR = 0;\r\n\r\nconst calculateBMR = (weight, height, age, sex = FEMALE) =>\r\n    (weight && height && age)\r\n        ? WEIGHT_COEF * weight\r\n        + HEIGHT_COEF * height\r\n        + AGE_COEF * age\r\n        + SexCoefficient[sex]\r\n        : DEFAULT_BMR;\r\n\r\nexport const calculateTotalIntake = ({ weight, height, age, sex, activity = NORMAL_ACTIVITY }) =>\r\n    ActivityCoefficient[activity] * calculateBMR(weight, height, age, sex);\r\n\r\nexport const calculateMacronutrient = (goalIntake, weight, fatRatio, proteinRatio) => {\r\n    if (goalIntake && weight && fatRatio && proteinRatio) {\r\n        const fat = Math.round(weight * fatRatio);\r\n        const protein = Math.round(weight * proteinRatio);\r\n        const carbohydrate = Math.round((goalIntake - fat * 9 - protein * 4) / 4);\r\n\r\n        return {\r\n            fat,\r\n            protein,\r\n            carbohydrate\r\n        }\r\n    }\r\n};\r\n\r\nexport const calculateNutritionByWeight = product => {\r\n    const newProduct = { ...product };\r\n    const weightCoef = product.weight / 100;\r\n\r\n    newProduct.protein = Math.round(weightCoef * product.proteinPer * 100) / 100;\r\n    newProduct.fat = Math.round(weightCoef * product.fatPer * 100) / 100;\r\n    newProduct.carbohydrate = Math.round(weightCoef * product.carbohydratePer * 100) / 100;\r\n    newProduct.calorie = Math.round(weightCoef * product.caloriePer * 100) / 100;\r\n\r\n    return newProduct;\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, Col, Form, Modal } from 'react-bootstrap';\r\nimport { calculateNutritionByWeight } from '../../helper/nutritionCalculator';\r\n\r\nconst initialProduct = {\r\n    title: '',\r\n    weight: 0,\r\n    protein: 0,\r\n    fat: 0,\r\n    carbohydrate: 0,\r\n    calorie: 0,\r\n    proteinPer: 0,\r\n    fatPer: 0,\r\n    carbohydratePer: 0,\r\n    caloriePer: 0,\r\n};\r\n\r\nclass ProductModal extends Component {\r\n    static defaultProps = {\r\n        onSubmit: f => f,\r\n        onClose: f => f,\r\n        isDisplayedProductModal: false,\r\n    };\r\n\r\n    static propTypes = {\r\n        onSubmit: PropTypes.func.isRequired,\r\n        onClose: PropTypes.func.isRequired,\r\n        isDisplayedProductModal: PropTypes.bool,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { ...initialProduct };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { product } = this.props;\r\n\r\n        if (product) {\r\n            this.setState({\r\n                ...product\r\n            });\r\n        }\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n\r\n    handleSubmit = () => {\r\n        const { onSubmit, onClose } = this.props;\r\n        onSubmit(calculateNutritionByWeight(this.state));\r\n        onClose();\r\n    };\r\n\r\n    render() {\r\n        const { isDisplayedProductModal, onClose } = this.props;\r\n        const product = { ...this.state };\r\n\r\n        return (\r\n            <Modal show={isDisplayedProductModal} onHide={onClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Input your product</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <ProductForm handleChange={this.handleChange} handleSubmit={this.handleSubmit} product={product}/>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={onClose}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"primary\" type=\"submit\" onClick={this.handleSubmit}>\r\n                        Save Changes\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProductModal;\r\n\r\nexport const ProductForm = ({ handleSubmit, handleChange, product }) => {\r\n    const { title, weight, proteinPer, fatPer, carbohydratePer, caloriePer } = product;\r\n    return (\r\n        <div className='popup'>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Group>\r\n                    <Form.Label>Input product title:</Form.Label>\r\n                    <Form.Control type=\"text\" name=\"title\" value={title} onChange={handleChange}/>\r\n                    <Form.Label>Weight in gr:</Form.Label>\r\n                    <Form.Control type=\"number\" step=\"1\" name=\"weight\" value={weight} onChange={handleChange}/>\r\n                </Form.Group>\r\n\r\n                <Form.Row>\r\n                    <Col>\r\n                        <Form.Label>Protein per 100 gr:</Form.Label>\r\n                        <Form.Control type=\"number\" step=\"1\" name=\"proteinPer\" value={proteinPer}\r\n                                      onChange={handleChange}/>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Label>Fat per 100 gr:</Form.Label>\r\n                        <Form.Control type=\"number\" step=\"1\" name=\"fatPer\" value={fatPer} onChange={handleChange}/>\r\n                    </Col>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Col>\r\n                        <Form.Label>Carbohydrate per 100 gr:</Form.Label>\r\n                        <Form.Control type=\"number\" step=\"1\" name=\"carbohydratePer\" value={carbohydratePer}\r\n                                      onChange={handleChange}/>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Label>Calorie per 100 gr:</Form.Label>\r\n                        <Form.Control type=\"number\" step=\"1\" name=\"caloriePer\" value={caloriePer}\r\n                                      onChange={handleChange}/>\r\n                    </Col>\r\n                </Form.Row>\r\n            </Form>\r\n        </div>\r\n    )\r\n};\r\n\r\nProductForm.propTypes = {\r\n    handleChange: PropTypes.func.isRequired,\r\n    handleSubmit: PropTypes.func.isRequired,\r\n    product: PropTypes.shape({\r\n        title: PropTypes.string,\r\n        weight: PropTypes.oneOfType([\r\n            PropTypes.number,\r\n            PropTypes.string\r\n        ]),\r\n        proteinPer: PropTypes.oneOfType([\r\n            PropTypes.number,\r\n            PropTypes.string\r\n        ]),\r\n        fatPer: PropTypes.oneOfType([\r\n            PropTypes.number,\r\n            PropTypes.string\r\n        ]),\r\n        carbohydratePer: PropTypes.oneOfType([\r\n            PropTypes.number,\r\n            PropTypes.string\r\n        ]),\r\n        caloriePer: PropTypes.oneOfType([\r\n            PropTypes.number,\r\n            PropTypes.string\r\n        ]),\r\n    }),\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ProductModal from '../modal/ProductModal';\r\n\r\nimport './Table.css';\r\n\r\nclass ProductTable extends Component {\r\n    static propTypes = {\r\n        onDelete: PropTypes.func.isRequired,\r\n        onSubmit: PropTypes.func.isRequired,\r\n        headers: PropTypes.array,\r\n        rows: PropTypes.array,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isDisplayModal: false,\r\n            editIndex: false,\r\n        }\r\n    }\r\n\r\n    onAdd = () => {\r\n        this.setState({\r\n            isDisplayModal: true,\r\n        });\r\n    };\r\n\r\n    onEdit = i => () => {\r\n        this.setState({\r\n            isDisplayModal: true,\r\n            editIndex: i,\r\n        });\r\n    };\r\n\r\n    onDelete = i => () => {\r\n        this.props.onDelete(i);\r\n    };\r\n\r\n    onSubmit = row => {\r\n        this.props.onSubmit(this.state.editIndex, row);\r\n    };\r\n\r\n    onClose = () => {\r\n        this.setState({\r\n            isDisplayModal: false,\r\n            editIndex: false,\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { headers, rows } = this.props;\r\n        const { isDisplayModal, editIndex } = this.state;\r\n        const product = (editIndex || editIndex === 0) && rows[editIndex];\r\n\r\n        return (\r\n            <div className=\"table-container\">\r\n                {\r\n                    isDisplayModal\r\n                    && <ProductModal onSubmit={this.onSubmit}\r\n                                     onClose={this.onClose}\r\n                                     isDisplayedProductModal={isDisplayModal}\r\n                                     product={product}\r\n                    />\r\n                }\r\n                <div className=\"btn-container\">\r\n                    <button className=\"btn btn-info add-btn\" onClick={this.onAdd}>Add</button>\r\n                </div>\r\n\r\n                <div className=\"table\">\r\n                    <div className=\"product-row headers\">\r\n                        {\r\n                            headers.map((header, i) =>\r\n                                <div className=\"cell header\" key={`${header}-${i}`}>\r\n                                    {header}\r\n                                </div>\r\n                            )\r\n                        }\r\n                        <div className=\"cell header delete-row\"/>\r\n                    </div>\r\n                    <div>\r\n                        {\r\n                            rows.map((row, i) =>\r\n                                <div className=\"product-row\" key={i}>\r\n                                    {\r\n                                        Object.keys(row).map((key, j) =>\r\n                                            <div className=\"cell\" key={`${key}-${j}`} onClick={this.onEdit(i)}>\r\n                                                {row[key]}\r\n                                            </div>\r\n                                        )\r\n                                    }\r\n                                    <div className=\"cell delete-row\">\r\n                                        <button className=\"btn btn-danger delete-btn\"\r\n                                                onClick={this.onDelete(i)}>Delete\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProductTable;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Header } from '../header/Header';\r\nimport ProductTable from '../table/ProductTable';\r\n\r\nexport const headers = [\r\n    'Title',\r\n    'Weight',\r\n    'Protein',\r\n    'Fat',\r\n    'Carbs',\r\n    'Calorie',\r\n    'Protein Per 100',\r\n    'Fat Per 100',\r\n    'Carbs Per 100',\r\n    'Calorie Per 100',\r\n];\r\n\r\nexport const Products = ({ products, onSubmit, onDelete }) => (\r\n    <div>\r\n        <Header/>\r\n        <ProductTable\r\n            headers={headers}\r\n            rows={products}\r\n            onSubmit={onSubmit}\r\n            onDelete={onDelete}\r\n        />\r\n    </div>\r\n);\r\n\r\nProducts.propTypes = {\r\n    products: PropTypes.array.isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n    onDelete: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Form } from 'react-bootstrap';\r\n\r\nimport ProductModal from '../modal/ProductModal';\r\n\r\nimport './ProductSelect.css';\r\n\r\nconst defaultIndex = 0;\r\nconst PRODUCTS_KEY = 'products';\r\n\r\nclass ProductSelect extends Component {\r\n    static defaultProps = {\r\n        onSelect: f => f,\r\n    };\r\n\r\n    static propTypes = {\r\n        onSelect: PropTypes.func,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            products: [{ id: defaultIndex, title: 'Choose Product' }],\r\n            selectedIndex: defaultIndex,\r\n            isDisplayedProductModal: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { products } = this.state;\r\n        const storedProducts = JSON.parse(localStorage.getItem(PRODUCTS_KEY)) || [];\r\n\r\n        this.setState({\r\n            products: [...products, ...storedProducts],\r\n        })\r\n    }\r\n\r\n    onAddProduct = () => {\r\n        this.setState({\r\n            isDisplayedProductModal: true\r\n        })\r\n    };\r\n\r\n    onAddProductToTable = () => {\r\n        const { selectedIndex, products } = this.state;\r\n        if (selectedIndex !== defaultIndex) {\r\n            this.props.onSelect(products[selectedIndex]);\r\n        }\r\n    };\r\n\r\n    onClose = () => {\r\n        this.setState({\r\n            isDisplayedProductModal: false\r\n        })\r\n    };\r\n\r\n    onSubmit = product => {\r\n        const newProducts = [...this.state.products, product];\r\n\r\n        this.setState({\r\n            products: newProducts,\r\n        }, () => localStorage.setItem(PRODUCTS_KEY, JSON.stringify(newProducts.slice(1))));\r\n    };\r\n\r\n    onChange = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            selectedIndex: +event.target.value\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { isDisplayedProductModal, products, selectedIndex } = this.state;\r\n        return (\r\n            <div className=\"product-select\">\r\n                {\r\n                    isDisplayedProductModal\r\n                    && <ProductModal onSubmit={this.onSubmit}\r\n                                     onClose={this.onClose}\r\n                                     isDisplayedProductModal={isDisplayedProductModal}/>\r\n                }\r\n                <Form className=\"product-select-form\">\r\n                    <Form.Group>\r\n                        <Form.Label htmlFor=\"product-select\" className=\"lead\">Select a product:</Form.Label>\r\n                        <Form.Control as=\"select\" className=\"product-select\"\r\n                                      id=\"product-select\"\r\n                                      onChange={this.onChange}\r\n                                      value={selectedIndex}\r\n                                      title={products[selectedIndex].title}>\r\n                            {\r\n                                products.map((product, id) =>\r\n                                    <option key={`${id}-${product.title}`} value={id}>\r\n                                        {product.title}\r\n                                    </option>\r\n                                )\r\n                            }\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <button className=\"btn btn-secondary\" type=\"button\" onClick={this.onAddProduct}>Add Product\r\n                        </button>\r\n                        <button className=\"btn btn-primary\" type=\"button\" onClick={this.onAddProductToTable}>Add To\r\n                            Table\r\n                        </button>\r\n                    </Form.Group>\r\n                </Form>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default ProductSelect;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { headers } from '../tab/Products';\r\nimport ProductSelect from './ProductSelect';\r\n\r\nimport './Table.css';\r\n\r\nexport const initialRow = {\r\n    title: 'Input title',\r\n    weight: 0,\r\n    protein: 0,\r\n    fat: 0,\r\n    carbohydrate: 0,\r\n    calorie: 0,\r\n    proteinPer: 0,\r\n    fatPer: 0,\r\n    carbohydratePer: 0,\r\n    caloriePer: 0,\r\n};\r\n\r\nclass MenuTable extends Component {\r\n    static defaultProps = {\r\n        goalIntake: 0,\r\n        goalProtein: 0,\r\n        goalFat: 0,\r\n        goalCarbohydrate: 0\r\n    };\r\n\r\n    static propTypes = {\r\n        goalIntake: PropTypes.number,\r\n        goalProtein: PropTypes.number,\r\n        goalFat: PropTypes.number,\r\n        goalCarbohydrate: PropTypes.number,\r\n        onAddRow: PropTypes.func.isRequired,\r\n        updateNutrition: PropTypes.func.isRequired,\r\n        onChangeRow: PropTypes.func.isRequired,\r\n        onDeleteRow: PropTypes.func.isRequired,\r\n        rows: PropTypes.array.isRequired,\r\n        protein: PropTypes.oneOfType([\r\n            PropTypes.number,\r\n            PropTypes.string\r\n        ]),\r\n        fat: PropTypes.oneOfType([\r\n            PropTypes.number,\r\n            PropTypes.string\r\n        ]),\r\n        carbohydrate: PropTypes.oneOfType([\r\n            PropTypes.number,\r\n            PropTypes.string\r\n        ]),\r\n        calorie: PropTypes.oneOfType([\r\n            PropTypes.number,\r\n            PropTypes.string\r\n        ]),\r\n    };\r\n\r\n    onAddRow = () => {\r\n        this.props.onAddRow({ ...initialRow });\r\n    };\r\n\r\n    onAddPresetRow = product => {\r\n        this.props.onAddRow({ ...product });\r\n        this.props.updateNutrition();\r\n    };\r\n\r\n    onChangeRow = i => event => {\r\n        const target = event.target;\r\n        this.props.onChangeRow(i, target.name, target.value);\r\n    };\r\n\r\n    onDeleteRow = i => () => {\r\n        this.props.onDeleteRow(i);\r\n        this.props.updateNutrition();\r\n    };\r\n\r\n    getEditableCell = (value, name, rowIndex) => (\r\n        <div className=\"cell\">\r\n            <input type=\"number\" className=\"cell-input\" value={value} name={name}\r\n                   onChange={this.onChangeRow(rowIndex)}/>\r\n        </div>\r\n    );\r\n\r\n    render() {\r\n        const {\r\n            rows, protein, fat, carbohydrate, calorie,\r\n            goalIntake, goalProtein, goalFat, goalCarbohydrate\r\n        } = this.props;\r\n\r\n        return (\r\n            <>\r\n                <div className=\"product-select-container\">\r\n                    <ProductSelect onSelect={this.onAddPresetRow}/>\r\n                    <button className=\"btn btn-info add-row-btn\" onClick={this.onAddRow}>Add row</button>\r\n                </div>\r\n                <div className=\"table\">\r\n                    <div className=\"product-row headers\">\r\n                        {\r\n                            headers.map((header, i) =>\r\n                                <div className=\"cell header\" key={`${header}-${i}`}>\r\n                                    {header}\r\n                                </div>\r\n                            )\r\n                        }\r\n                        <div className=\"cell header delete-row\"/>\r\n                    </div>\r\n                    <div>\r\n                        {\r\n                            rows.map((row, i) =>\r\n                                <div className=\"product-row\" key={i}>\r\n                                    <div className=\"cell\">\r\n                                        <input type=\"text\" className=\"cell-input\" value={row.title} name={'title'}\r\n                                               onChange={this.onChangeRow(i)}/>\r\n                                    </div>\r\n                                    {this.getEditableCell(row.weight, 'weight', i)}\r\n                                    <div className=\"cell\">{row.protein}</div>\r\n                                    <div className=\"cell\">{row.fat}</div>\r\n                                    <div className=\"cell\">{row.carbohydrate}</div>\r\n                                    <div className=\"cell\">{row.calorie}</div>\r\n                                    {this.getEditableCell(row.proteinPer, 'proteinPer', i)}\r\n                                    {this.getEditableCell(row.fatPer, 'fatPer', i)}\r\n                                    {this.getEditableCell(row.carbohydratePer, 'carbohydratePer', i)}\r\n                                    {this.getEditableCell(row.caloriePer, 'caloriePer', i)}\r\n                                    <div className=\"cell delete-row\">\r\n                                        <button className=\"btn btn-danger delete-row-btn\"\r\n                                                onClick={this.onDeleteRow(i)}>Delete row\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                        <div className=\"product-row\">\r\n                            <div className=\"cell\">Total</div>\r\n                            <div className=\"cell\"/>\r\n                            <div className=\"cell\">{protein}</div>\r\n                            <div className=\"cell\">{fat}</div>\r\n                            <div className=\"cell\">{carbohydrate}</div>\r\n                            <div className=\"cell\">{calorie}</div>\r\n                            <div className=\"cell\"/>\r\n                            <div className=\"cell\"/>\r\n                            <div className=\"cell\"/>\r\n                            <div className=\"cell\"/>\r\n                            <div className=\"cell delete-row\"/>\r\n                        </div>\r\n                        <div className=\"product-row\">\r\n                            <div className=\"cell\">Goal</div>\r\n                            <div className=\"cell\"/>\r\n                            <div className=\"cell\">{goalProtein}</div>\r\n                            <div className=\"cell\">{goalFat}</div>\r\n                            <div className=\"cell\">{goalCarbohydrate}</div>\r\n                            <div className=\"cell\">{goalIntake}</div>\r\n                            <div className=\"cell\"/>\r\n                            <div className=\"cell\"/>\r\n                            <div className=\"cell\"/>\r\n                            <div className=\"cell\"/>\r\n                            <div className=\"cell delete-row\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MenuTable;\r\n","import { connect } from 'react-redux';\r\nimport { Menu } from '../tab/Menu';\r\nimport { addRowToMenu, calculateNutrition, changeRow, deleteMenuRow } from '../../actions/ActionCreator';\r\n\r\nconst mapStateToProps = state => ({\r\n    goalNutrition: state.nutrition,\r\n    menu: state.menu\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onAddRow:\r\n        row => dispatch(addRowToMenu(row)),\r\n    onDeleteRow:\r\n        rowIndex => dispatch(deleteMenuRow(rowIndex)),\r\n    onChangeRow:\r\n        (rowIndex, inputName, inputValue) => dispatch(changeRow(rowIndex, inputName, inputValue)),\r\n    updateNutrition:\r\n        () => dispatch(calculateNutrition()),\r\n});\r\n\r\nexport const MenuContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Menu);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Header } from '../header/Header';\r\nimport MenuTable from '../table/MenuTable';\r\n\r\nexport const Menu = ({ goalNutrition, menu, onAddRow, onChangeRow, updateNutrition, onDeleteRow }) => {\r\n    const { goalIntake, protein: goalProtein, fat: goalFat, carbohydrate: goalCarbohydrate } = goalNutrition;\r\n    const { rows, protein, fat, carbohydrate, calorie } = menu;\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            <MenuTable\r\n                goalIntake={goalIntake}\r\n                goalProtein={goalProtein}\r\n                goalFat={goalFat}\r\n                goalCarbohydrate={goalCarbohydrate}\r\n                rows={rows}\r\n                protein={protein}\r\n                fat={fat}\r\n                carbohydrate={carbohydrate}\r\n                calorie={calorie}\r\n                onAddRow={onAddRow}\r\n                onChangeRow={onChangeRow}\r\n                updateNutrition={updateNutrition}\r\n                onDeleteRow={onDeleteRow}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nMenu.propTypes = {\r\n    goalNutrition: PropTypes.object.isRequired,\r\n    menu: PropTypes.object.isRequired,\r\n    onAddRow: PropTypes.func.isRequired,\r\n    onChangeRow: PropTypes.func.isRequired,\r\n    updateNutrition: PropTypes.func.isRequired,\r\n    onDeleteRow: PropTypes.func.isRequired\r\n};\r\n","import { connect } from 'react-redux';\r\n\r\nimport { Products } from '../tab/Products';\r\nimport { deleteProduct, submitProduct } from '../../actions/ActionCreator';\r\n\r\nconst mapStateToProps = state => ({\r\n    products: state.products\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onSubmit:\r\n        (productIndex, product) => dispatch(submitProduct(productIndex, product)),\r\n    onDelete:\r\n        productIndex => dispatch(deleteProduct(productIndex)),\r\n});\r\n\r\nexport const ProductsContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Products);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Header } from '../header/Header';\r\n\r\nimport './About.css';\r\n\r\nconst BMR_HEADERS = ['Sex', 'BMR'];\r\nconst BMR_ROWS = [\r\n    ['Men', 'BMR = (10 × weight in kg) + (6.25 × height in cm) - (5 × age in years) + 5'],\r\n    ['Women', 'BMR = (10 × weight in kg) + (6.25 × height in cm) - (5 × age in years) - 161']\r\n];\r\n\r\nconst TOTAL_INTAKE_HEADERS = ['Lifestyle', 'Example', 'PAL', 'Calculation'];\r\nconst TOTAL_INTAKE_ROWS = [\r\n    ['No activity', 'No any sport activities per week', '1.2', 'BMR x 1.2'],\r\n    ['Low activity', '1 - 3 workouts by 30 minutes per week', '1.375', 'BMR x 1.375'],\r\n    ['Sedentary or light activity', '3 - 5 workouts by 30 minutes per week', '1.53', 'BMR x 1.53'],\r\n    ['Active or moderately active', 'Construction worker or person running one hour daily', '1.76', 'BMR x 1.76'],\r\n    ['Vigorously active', 'Agricultural worker (non mechanized) or person swimming two hours daily', '2.25', 'BMR x 2.25']\r\n];\r\n\r\nconst FAT = 'weight x fatRatio';\r\nconst PROTEIN = 'weight x proteinRatio';\r\nconst CARBOHYDRATE = '(goalIntake - fat * 9 - protein * 4)/4';\r\n\r\nconst NUTRITION_HEADERS = ['Nutrient', 'RDI'];\r\nconst NUTRITION_ROWS = [\r\n    ['Total Protein', PROTEIN],\r\n    ['Total Fat', FAT],\r\n    ['Total Carbohydrate', CARBOHYDRATE]\r\n];\r\n\r\nexport const About = () => (\r\n    <div>\r\n        <Header/>\r\n        <div className=\"about\">\r\n            <div className=\"paragraph\">\r\n                <h4 className=\"text-primary\">Nutrition Calculator</h4>\r\n                <p>\r\n                    The project is a simple nutrition calculator that using <a\r\n                    href={\"https://en.wikipedia.org/wiki/Harris%E2%80%93Benedict_equation\"}>Harris–Benedict\r\n                    equation</a> revised by Mifflin and St Jeor.\r\n                </p>\r\n            </div>\r\n            <h5 className=\"text-primary\">Step 1. Individual's basal metabolic rate (BMR)</h5>\r\n            <div className=\"paragraph\">\r\n                <ConstTable headers={BMR_HEADERS} rows={BMR_ROWS}/>\r\n            </div>\r\n\r\n            <h5 className=\"text-primary\">Step 2. Total Intake</h5>\r\n            <div className=\"paragraph\">\r\n                <ConstTable headers={TOTAL_INTAKE_HEADERS} rows={TOTAL_INTAKE_ROWS}/>\r\n            </div>\r\n\r\n            <h5 className=\"text-primary\">Step 3. Reference Daily Intake</h5>\r\n            <div className=\"paragraph\">\r\n                <ConstTable headers={NUTRITION_HEADERS} rows={NUTRITION_ROWS}/>\r\n            </div>\r\n\r\n            <h5 className=\"text-primary\">Nutrition Recommendations</h5>\r\n            <div className=\"paragraph\">\r\n                <ul className=\"tips-list\">\r\n                    <li>\r\n                        Energy intake (calories) should be in balance with energy expenditure. To avoid\r\n                        unhealthy\r\n                        weight gain, total fat should not exceed 30% of total energy intake. Intake of saturated\r\n                        fats should be less than 10% of total energy intake, and intake of trans-fats less than\r\n                        1% of total energy intake, with a shift in fat consumption away from saturated fats and\r\n                        trans-fats to unsaturated fats, and towards the goal of eliminating\r\n                        industrially-produced\r\n                        trans-fats.\r\n                    </li>\r\n                    <li>\r\n                        Limiting intake of free sugars to less than 10% of total energy intake is part of a\r\n                        healthy\r\n                        diet. A further reduction to less than 5% of total energy intake is suggested for\r\n                        additional\r\n                        health benefits.\r\n                    </li>\r\n                    <li>\r\n                        Keeping salt intake to less than 5 g per day (equivalent to sodium intake of less than 2\r\n                        g\r\n                        per day) helps to prevent hypertension, and reduces the risk of heart disease and stroke\r\n                        in the adult population.\r\n                    </li>\r\n                </ul>\r\n\r\n                <a href=\"https://www.who.int/health-topics/news-room/fact-sheets/detail/healthy-diet\">More\r\n                    recommendations</a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nconst ConstTable = ({ headers, rows }) => (\r\n    <table className=\"const-table\">\r\n        <thead>\r\n        <tr>\r\n            {\r\n                headers.map((header, i) =>\r\n                    <th key={i} className=\"lead\">{header}</th>\r\n                )\r\n            }\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        {\r\n            rows.map((row, i) =>\r\n                <tr key={i}>\r\n                    {\r\n                        row.map((cell, j) =>\r\n                            <td key={j}>{cell}</td>\r\n                        )\r\n                    }\r\n                </tr>\r\n            )\r\n        }\r\n        </tbody>\r\n    </table>\r\n);\r\n\r\nConstTable.propTypes = {\r\n    headers: PropTypes.arrayOf(PropTypes.string),\r\n    rows: PropTypes.arrayOf(PropTypes.string),\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Header } from '../header/Header';\r\n\r\nimport './NotFoundPage.css';\r\n\r\nconst redirect = history => () => {\r\n    history.push('/calculator');\r\n};\r\n\r\nexport const NotFoundPage = ({ history }) => (\r\n    <div className=\"not-found-container\">\r\n        <Header/>\r\n        <div className=\"not-found-content\">\r\n            <p className=\"main-text\">\r\n                404\r\n            </p>\r\n            <p className=\"text\">The page you are looking for not available!</p>\r\n            <button type=\"button\" className=\"btn btn-warning btn-lg\" onClick={redirect(history)}>GO TO HOME</button>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nNotFoundPage.propTypes = {\r\n    history: PropTypes.object.isRequired,\r\n};\r\n","export const storeObject = (key, storedObject) =>\r\n    localStorage.setItem(key, JSON.stringify(storedObject));\r\n\r\nexport const get = key => JSON.parse(localStorage.getItem(key));\r\n\r\nexport const getOrDefault = (key, defaultValue) => {\r\n    const parsedValue = JSON.parse(localStorage.getItem(key));\r\n\r\n    return isNotEmptyObject(parsedValue)\r\n        ? parsedValue\r\n        : defaultValue;\r\n};\r\n\r\nexport const CHARACTERISTIC_KEY = 'characteristics';\r\nexport const NUTRITION_KEY = 'nutrition';\r\nexport const PRODUCTS_KEY = 'products';\r\n\r\nconst isNotEmptyObject = obj => obj && Object.keys(obj).length;\r\n","import { ActionNames } from '../constant/ActionName';\r\nimport { FEMALE } from '../constant/Sex';\r\nimport { NORMAL_ACTIVITY } from '../constant/Activity';\r\nimport { RECOMMENDED_FAT_RATIO, RECOMMENDED_PROTEIN_RATIO } from '../constant/NutritionRatio';\r\nimport { DEFAULT_GOAL_RATIO } from '../components/goal-selector/GoalSelector';\r\nimport { CHARACTERISTIC_KEY, getOrDefault, storeObject } from '../helper/localStorageHelper';\r\nimport { calculateTotalIntake } from '../helper/nutritionCalculator';\r\n\r\nexport const initialCharacteristicsState = {\r\n    weight: 0,\r\n    height: 0,\r\n    age: 0,\r\n    sex: FEMALE,\r\n    activity: NORMAL_ACTIVITY,\r\n    goalRatio: DEFAULT_GOAL_RATIO,\r\n    proteinRatio: RECOMMENDED_PROTEIN_RATIO,\r\n    fatRatio: RECOMMENDED_FAT_RATIO,\r\n    totalIntake: 0,\r\n};\r\n\r\nexport const characteristics = (\r\n    state = getOrDefault(CHARACTERISTIC_KEY, { ...initialCharacteristicsState }),\r\n    action\r\n) => {\r\n    switch (action.type) {\r\n        case ActionNames.SUBMIT_CHARACTERISTICS: {\r\n            const totalIntake = calculateTotalIntake(state);\r\n            const updatedState = {\r\n                ...state,\r\n                totalIntake\r\n            };\r\n\r\n            storeObject(CHARACTERISTIC_KEY, updatedState);\r\n            return updatedState;\r\n        }\r\n        case ActionNames.CHARACTERISTICS_INPUT_CHANGE: {\r\n            const updatedState = { ...state };\r\n            updatedState[action.inputName] = action.inputValue;\r\n\r\n            storeObject(CHARACTERISTIC_KEY, updatedState);\r\n            return updatedState;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { ActionNames } from '../constant/ActionName';\r\nimport { calculateMacronutrient } from '../helper/nutritionCalculator';\r\nimport { getOrDefault, NUTRITION_KEY, storeObject } from '../helper/localStorageHelper';\r\n\r\nexport const initialNutritionState = {\r\n    goalIntake: 0,\r\n    protein: 0,\r\n    fat: 0,\r\n    carbohydrate: 0,\r\n};\r\n\r\nexport const nutrition = (\r\n    state = getOrDefault(NUTRITION_KEY, { ...initialNutritionState }),\r\n    action) => {\r\n    switch (action.type) {\r\n        case ActionNames.SUBMIT_GOAL_RATIO: {\r\n            const { goalRatio, totalIntake } = action;\r\n            const updatedState = {\r\n                ...state,\r\n                goalIntake: Math.round(totalIntake * goalRatio)\r\n            };\r\n\r\n            storeObject(NUTRITION_KEY, updatedState);\r\n            return updatedState;\r\n        }\r\n        case ActionNames.SUBMIT_NUTRITION_RATIO: {\r\n            const { goalIntake } = state;\r\n            const { proteinRatio, fatRatio, weight } = action;\r\n            const updatedState = {\r\n                ...state,\r\n                ...calculateMacronutrient(goalIntake, weight, fatRatio, proteinRatio)\r\n            };\r\n\r\n            storeObject(NUTRITION_KEY, updatedState);\r\n            return updatedState;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { ActionNames } from '../constant/ActionName';\r\nimport { calculateNutritionByWeight } from '../helper/nutritionCalculator';\r\n\r\nconst initialTotal = {\r\n    protein: 0,\r\n    fat: 0,\r\n    carbohydrate: 0,\r\n    calorie: 0\r\n};\r\n\r\nexport const initialMenuState = {\r\n    rows: [],\r\n    ...initialTotal,\r\n};\r\n\r\nexport const menu = (\r\n    state = { ...initialMenuState },\r\n    action\r\n) => {\r\n    switch (action.type) {\r\n        case ActionNames.ADD_ROW_TO_MENU: {\r\n            return {\r\n                ...state,\r\n                rows: [...state.rows, { ...action.row }]\r\n            };\r\n        }\r\n        case ActionNames.MENU_ROW_INPUT_CHANGE: {\r\n            const { rowIndex, inputName, inputValue } = action;\r\n\r\n            const updatedRows = [...state.rows];\r\n\r\n            const row = updatedRows[rowIndex];\r\n            row[inputName] = inputValue;\r\n\r\n            updatedRows[rowIndex] = calculateNutritionByWeight(row);\r\n\r\n            return {\r\n                rows: updatedRows,\r\n                ...getUpdatedNutrition(updatedRows),\r\n            }\r\n        }\r\n        case ActionNames.CALCULATE_MENU_NUTRITION: {\r\n            return {\r\n                ...state,\r\n                ...getUpdatedNutrition(state.rows)\r\n            }\r\n        }\r\n        case ActionNames.DELETE_MENU_ROW: {\r\n            const rows = [...state.rows];\r\n            rows.splice(action.rowIndex, 1);\r\n\r\n            return {\r\n                ...state,\r\n                rows\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n};\r\n\r\nconst nutritionReducer = (accumulator, nutrition) => {\r\n    accumulator.protein += nutrition.protein;\r\n    accumulator.fat += nutrition.fat;\r\n    accumulator.carbohydrate += nutrition.carbohydrate;\r\n    accumulator.calorie += nutrition.calorie;\r\n\r\n    return accumulator;\r\n};\r\n\r\nconst getUpdatedNutrition = (rows) => {\r\n    const nutrition = rows.reduce(nutritionReducer, { ...initialTotal });\r\n\r\n    return {\r\n        protein: nutrition.protein.toFixed(1),\r\n        fat: nutrition.fat.toFixed(1),\r\n        carbohydrate: nutrition.carbohydrate.toFixed(1),\r\n        calorie: nutrition.calorie.toFixed(1),\r\n    }\r\n};\r\n","import { getOrDefault, PRODUCTS_KEY, storeObject } from '../helper/localStorageHelper';\r\nimport { ActionNames } from '../constant/ActionName';\r\n\r\nexport const initialProductsState = [];\r\n\r\nexport const products = (\r\n    state = getOrDefault(PRODUCTS_KEY, [...initialProductsState]),\r\n    action\r\n) => {\r\n    switch (action.type) {\r\n        case ActionNames.SUBMIT_PRODUCT: {\r\n            const newProducts = [...state];\r\n            const { productIndex, product } = action;\r\n\r\n            if (productIndex || productIndex === 0) {\r\n                newProducts[productIndex] = product;\r\n            } else {\r\n                newProducts.push(product);\r\n            }\r\n\r\n            storeObject(PRODUCTS_KEY, newProducts);\r\n            return newProducts;\r\n        }\r\n        case ActionNames.DELETE_PRODUCT: {\r\n            const newProducts = [...state];\r\n            const { productIndex } = action;\r\n\r\n            newProducts.splice(productIndex, 1);\r\n\r\n            storeObject(PRODUCTS_KEY, newProducts);\r\n            return newProducts;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { HashRouter, Route, Switch } from 'react-router-dom'\r\nimport { combineReducers, createStore } from 'redux';\r\n\r\nimport { CalculatorContainer } from './components/container/CalculatorContainer';\r\nimport { MenuContainer } from './components/container/MenuContainer';\r\nimport { ProductsContainer } from './components/container/ProductsContainer';\r\nimport { About } from './components/tab/About';\r\nimport { NotFoundPage } from './components/tab/NotFoundPage';\r\nimport { characteristics } from './reducers/characteristics';\r\nimport { nutrition } from './reducers/nutrition';\r\nimport { menu } from './reducers/menu';\r\nimport { products } from './reducers/products';\r\n\r\nimport 'bootswatch/dist/minty/bootstrap.css';\r\n\r\nconst store = createStore(\r\n    combineReducers({ characteristics, nutrition, menu, products })\r\n);\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <Provider store={store}>\r\n                <HashRouter>\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={CalculatorContainer}/>\r\n                        <Route path=\"/calculator\" component={CalculatorContainer}/>\r\n                        <Route path=\"/menu\" component={MenuContainer}/>\r\n                        <Route path=\"/products\" component={ProductsContainer}/>\r\n                        <Route path=\"/about\" component={About}/>\r\n                        <Route component={NotFoundPage}/>\r\n                    </Switch>\r\n                </HashRouter>\r\n            </Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.6c6ec8ec.jpg\";"],"sourceRoot":""}